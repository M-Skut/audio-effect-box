#pragma once

#include <stdint.h>
#include "xil_io.h"
#include "adau1761_controller.h"

class Codec {
public:
	static void init_codec();
private:
	static void write_adau1761(uint32_t addr, uint64_t data, uint32_t nbytes);
	static uint64_t read_adau1761(uint32_t addr, uint32_t nbytes);
	static void reset_adau1761();
	static constexpr uint32_t AUDIO_BASE = XPAR_ADAU1761_CONTROLLER_0_S00_AXI_BASEADDR;
	static constexpr uint32_t CTRL_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG0_OFFSET;
	static constexpr uint32_t BUSY_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG1_OFFSET;
	static constexpr uint32_t WRITE_LOW_DATA_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG2_OFFSET;
	static constexpr uint32_t WRITE_HIGH_DATA_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG3_OFFSET;
	static constexpr uint32_t READ_LOW_DATA_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG4_OFFSET;
	static constexpr uint32_t READ_HIGH_DATA_ADDR = ADAU1761_CONTROLLER_S00_AXI_SLV_REG5_OFFSET;
	static constexpr uint32_t RESET_POS = 25;
	static constexpr uint32_t START_POS = 24;
	static constexpr uint32_t READ_POS = 19;
	static constexpr uint32_t NBYTES_POS = 16;
	static constexpr uint32_t ADDR_POS = 0;

};
